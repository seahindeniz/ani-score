name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: release-${{ github.event.pull_request.number || github.ref }}

jobs:
  release:
    if: ${{ github.actor != 'dependabot[bot]' && github.actor != 'github-actions[bot]' }}
    timeout-minutes: 8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ steps.app-token.outputs.token }}
          ref: ${{ github.head_ref }}
          persist-credentials: false

      - name: Set up Git user
        run: |
          git config user.name "${{ steps.app-token.outputs.app-slug }}[bot]"
          git config user.email "${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
          git config url."https://x-access-token:${{ steps.app-token.outputs.token }}@github.com/".insteadOf "https://github.com/"
          git config commit.gpgsign false
          git config tag.gpgsign false

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          run_install: false

      - name: Use NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Release
        if: github.ref == 'refs/heads/main'
        run: pnpm release-it
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
